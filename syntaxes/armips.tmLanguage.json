{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ARMIPS",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#entities"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#supports"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.armips",
					"match": "(?i)\\b(equ|org|orga|defs|db|dcb|dh|dcw|dw|dcd|dd|dcq)\\b"
				},
				{
					"name": "keyword.control.directive.armips",
					"match": "(?i)\\.(open|close|func|endfunc|ascii|loadtable|string|area|endarea|importlib|openfile|create|createfile|closefile|org|orga|headersize|include|align|aligna|fill|skip|incbin|import|byte|db|dcb|asciiz|halfword|dh|dcw|word|dw|dcd|doubleword|dd|dcq|float|double|table|stringn|str|strn|sjis|sjisn|if|ifdef|ifndef|else|elseif|elseifdef|elseifndef|endif|definelabel|function|warning|error|notice|erroronwarning|relativeinclude|nocash|sym|resetdelay|fixloaddelay|loadelf|arm|thumb|pool|msg|macro|endmacro|psx|ps2|psp|n64|rsp|gba|nds|3ds|arm\\.big|arm\\.little)\\b"
				},
				{
					"name": "keyword.operator.armips",
					"match": "[\\+\\-\\*(::)]|/(?![/*])"
				},
				{
					"name": "keyword.operator.instruction.thumb.armips",
					"match": "(?i)\\b(adc|add|and|asr|b|bcc|bcs|beq|bge|bgt|bhi|ble|bls|blt|bmi|bne|bpl|bvc|bvs|bic|bl|bx|cmn|cmp|eor|ldmia|ldr|ldrb|ldrh|lsl|ldsb|ldsh|lsr|mov|mul|mvn|neg|orr|pop|push|ror|sbc|stmia|str|strb|strh|swi|sub|tst)\\b"
				},
				{
					"name": "keyword.operator.instruction.arm.armips",
					"match": "(?i)\\b(adc|add|and|b|bic|bl|bx|cdp|cmn|cmp|eor|ldc|ldm|ldr|mcr|mla|mov|mrc|mrs|msr|mul|mvn|orr|rsb|rsc|sbc|stc|stm|str|sub|swi|swp|teq|tst)(eq|ne|cs|cc|mi|pl|vs|vc|hi|ls|ge|lt|gt|le|al)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.armips",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.armips",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.armips",
					"match": "(//|;).*$"
				},	
				{
					"name": "comment.block.armips",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.other.register.armips",
					"match": "\\b(r[0-9]|r1[0-5]|sp|lr|pc)\\b"
				},
				{
					"name": "variable.name.global.armips",
					"match": "(#-?)?[A-Z][A-Z0-9_]+"
				},
				{
					"name": "variable.name.static.armips",
					"match": "(#-?)?@[A-Z][A-Z0-9_]+"
				},
				{
					"name": "variable.name.local.armips",
					"match": "(#-?)?@@[A-Z][A-Z0-9_]+"
				}
			]
		},
		"entities": {
			"patterns": [
				{
					"name": "entity.name.function.global.armips",
					"match": "[a-zA-Z_][\\w_]*:?"
				},
				{
					"name": "entity.name.type.static.armips",
					"match": "@[a-zA-Z_][\\w_]*:?"
				},
				{
					"name": "entity.name.tag.local.armips",
					"match": "@@[a-zA-Z_][\\w_]*:?"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.dec.armips",
					"match": "#?-?\\b[0-9\\.]+\\b"
				},
				{
					"name": "constant.numeric.hex.armips",
					"match": "(?i)#?-?(0x[0-9A-F\\.]+|[0-9A-F\\.]+h)\\b"
				},
				{
					"name": "constant.numeric.oct.armips",
					"match": "(?i)#?-?(0o[0-7\\.]+|[0-7\\.]+o)\\b"
				},
				{
					"name": "constant.numeric.hex.armips",
					"match": "(?i)#?-?(0b[01\\.]+|[01\\.]+b)\\b"
				},
				{
					"name": "constant.numeric.exp.armips",
					"match": "(?i)#?-?\\b[0-9\\.]+e[\\+\\-]?[0-9]+\\b"
				}
			]
		},
		"supports": {
			"patterns": [
				{
					"name": "support.function.noargs.armips",
					"match": "(?i)\\b(version|endianness|outputname|orga?|headersize|is(arm|thumb))(?=\\(\\))"
				},
				{
					"name": "support.function.args.armips",
					"match": "(?i)\\b((orga?|headersize)(?=\\()(?!\\))|(defined|file(exists|size)|to(string|hex)|round|int|float|frac|abs|hi|lo|min|max|strlen|substr|regex_(match|search|extract)|r?find|read(byte|[su](8|16|32|64))|ascii)(?=\\())"
				}
			]
		}
	},
	"scopeName": "source.armips"
}